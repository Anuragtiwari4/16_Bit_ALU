// Code your design here
module ALU(
  input A,B,
  input en,
  input[3:0]opcode,
  output reg[31:0]result);
  
  always @(A or B or en or opcode)
    begin
      if(en==1)
        case(opcode)
          4'b0000: result = A+B; //ADDITION
          4'b0001: result = A-B; //SUBTRACTION
          4'b0010: result = A*B; //multiplication
          4'b0011: result = A+1; //increment
          4'b0100: result = A-1; //decrement
          4'b0101: result = A; //buffer
          4'b0110: result = ~(A);//not
          4'b0111: result = A&B; //and
          4'b1000: result = A|B; //or
          4'b1001: result = A^B; //xor
          4'b1010: result = ~(A&B);//nand
          4'b1011: result = ~(A|B);//nor
          4'b1100: result = ~(A^B);//xnor
          4'b1101: result = A<<B;//left shift
          4'b1110: result = A>>B;//right shift
          4'b1111: result = A/B;//division
          default:result = 16'hXXXX;
        endcase
      else
        result = 16'hzzzz;
    end 
endmodule